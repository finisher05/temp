Write PL/SQL Procedure & function to find class [Distinction (Total marks from 1499 to 990) ,First Class( 899 to 900) Higher Second (899 to 825) ,Second,Pass (824 to 750) ] of a student based on total marks from table Student (rollno, name, Marks1, Marks2, Marks3, Marks4, Marks5). 
Use exception handling when negative marks are entered by user(Marks<0) or Marks more than 100 are entered by user.. Store the result into Result table recording  RollNo,total marks, and class for each student .
-----------------------------------------------------------

CREATE TABLE Student (
    RollNo INT PRIMARY KEY,
    Name VARCHAR(100),
    Marks1 INT,
    Marks2 INT,
    Marks3 INT,
    Marks4 INT,
    Marks5 INT
);



CREATE TABLE Result (
    RollNo INT PRIMARY KEY,
    TotalMarks INT,
    Class VARCHAR(50)
);



INSERT INTO Student VALUES
(1, 'Alice', 100, 90, 90, 85, 85),     
(2, 'Bob', 90, 85, 80, 95, 85),        
(3, 'Charlie', 80, 75, 70, 85, 80),    
(4, 'David', 70, 65, 70, 70, 60),      
(5, 'Eve', 50, 55, 45, 60, 55),     

-- Invalid entries to trigger error
(6, 'Frank', 101, 90, 80, 70, 60),    
(7, 'Grace', -5, 85, 75, 80, 90); 




DELIMITER //

DROP FUNCTION IF EXISTS GetClassFromMarks;

CREATE FUNCTION GetClassFromMarks(totalMarks INT) RETURNS VARCHAR(50)
DETERMINISTIC
BEGIN
    DECLARE studentClass VARCHAR(50);

    IF totalMarks BETWEEN 450 AND 500 THEN
        SET studentClass = 'Distinction';
    ELSEIF totalMarks BETWEEN 400 AND 449 THEN
        SET studentClass = 'First Class';
    ELSEIF totalMarks BETWEEN 350 AND 399 THEN
        SET studentClass = 'Higher Second';
    ELSEIF totalMarks BETWEEN 300 AND 349 THEN
        SET studentClass = 'Second Class';
    ELSE
        SET studentClass = 'Pass';
    END IF;

    RETURN studentClass;
END;
//

DELIMITER ;



DELIMITER //

CREATE PROCEDURE EvaluateStudentResults()
BEGIN
    DECLARE done INT DEFAULT FALSE;
    DECLARE rno INT;
    DECLARE m1 INT;
    DECLARE m2 INT;
    DECLARE m3 INT;
    DECLARE m4 INT;
    DECLARE m5 INT;
    DECLARE total INT;
    DECLARE class VARCHAR(50);
    DECLARE err_msg VARCHAR(255);

    DECLARE cur CURSOR FOR SELECT RollNo, Marks1, Marks2, Marks3, Marks4, Marks5 FROM Student;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

    OPEN cur;

    read_loop: LOOP
        FETCH cur INTO rno, m1, m2, m3, m4, m5;

        IF done THEN
            LEAVE read_loop;
        END IF;

        -- Error check for marks
        IF m1 < 0 OR m1 > 100 OR
           m2 < 0 OR m2 > 100 OR
           m3 < 0 OR m3 > 100 OR
           m4 < 0 OR m4 > 100 OR
           m5 < 0 OR m5 > 100 THEN

            SET err_msg = CONCAT('Invalid marks entered for RollNo ', rno, '. Each mark must be between 0 and 100.');
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = err_msg;
        END IF;

        SET total = m1 + m2 + m3 + m4 + m5;
        SET class = GetClassFromMarks(total);

        INSERT INTO Result (RollNo, TotalMarks, Class)
        VALUES (rno, total, class)
        ON DUPLICATE KEY UPDATE TotalMarks = total, Class = class;
    END LOOP;

    CLOSE cur;
END;
//

DELIMITER ;



CALL EvaluateStudentResults();
SELECT * FROM Result;
